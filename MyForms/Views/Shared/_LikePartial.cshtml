@model LikeVM
<div class="row">
    <div class="border col-md-4 d-flex justify-content-between align-items-center">
        <strong id="likesCount">Likes: @Model.LikesCount</strong>
        @if (User.Identity.IsAuthenticated)
        {
            <button id="like" class="btn btn-link text-success p-0">
                <i class="fs-4 bi @(Model.IsLiked ? "bi-heart-fill":"bi-heart")"></i>
        </button>
        }
    </div>
</div>
<script>
    const likeBtn=document.getElementById("like");
    const likeCount=document.getElementById("likesCount");
    likeBtn.addEventListener("click",(e)=>{
        e.preventDefault();
        likeBtn.disabled=true;
        fetch("/AddLike",{
            method:"POST",
            headers:{"Content-Type":"application/json"},
            body: JSON.stringify({"templateId":@Model.TemplateId})
        }).then(response=>response.json())
        .then(data=>{
                const likeIcon= document.querySelector("#like i");
                likeIcon.classList.toggle("bi-heart-fill",data.isLiked);
                likeIcon.classList.toggle("bi-heart",!data.isLiked);
                likeCount.textContent=`Likes: ${data.likesCount}`;
                likeBtn.disabled=false;
        });
    });
</script>